<script type="text/javascript">
// 	var iWords = ['Zero', ' One', ' Two', ' Three', ' Four', ' Five', ' Six', ' Seven', ' Eight', ' Nine'];
// var ePlace = ['Ten', ' Eleven', ' Twelve', ' Thirteen', ' Fourteen', ' Fifteen', ' Sixteen', ' Seventeen', ' Eighteen', ' Nineteen'];
// var tensPlace = ['', ' Ten', ' Twenty', ' Thirty', ' Forty', ' Fifty', ' Sixty', ' Seventy', ' Eighty', ' Ninety'];
// var inWords = [];
 
// var numReversed, inWords, actnumber, i, j;
 
// function tensComplication() {
//     'use strict';
//     if (actnumber[i] === 0) {
//         inWords[j] = '';
//     } else if (actnumber[i] === 1) {
//         inWords[j] = ePlace[actnumber[i - 1]];
//     } else {
//         inWords[j] = tensPlace[actnumber[i]];
//     }
// }
 
// function testSkill() {
//     'use strict';
//     var junkVal = document.getElementById('rupees').value;
//     junkVal = Math.floor(junkVal);
//     var obStr = junkVal.toString();
//     numReversed = obStr.split('');
//     actnumber = numReversed.reverse();
 
//     if (Number(junkVal) >= 0) {
//         //do nothing
//     } else {
//         window.alert('wrong Number cannot be converted');
//         return false;
//     }
//     if (Number(junkVal) === 0) {
//         document.getElementById('container').innerHTML = obStr + '' + 'Rupees Zero Only';
//         return false;
//     }
//     if (actnumber.length > 9) {
//         window.alert('Oops!!!! the Number is too big to covertes');
//         return false;
//     }
 
 
 
//     var iWordsLength = numReversed.length;
//     var finalWord = '';
//     j = 0;
//     for (i = 0; i < iWordsLength; i++) {
//         switch (i) {
//             case 0:
//                 if (actnumber[i] === '0' || actnumber[i + 1] === '1') {
//                     inWords[j] = '';
//                 } else {
//                     inWords[j] = iWords[actnumber[i]];
//                 }
//                 inWords[j] = inWords[j] + ' Only';
//                 break;
//             case 1:
//                 tensComplication();
//                 break;
//             case 2:
//                 if (actnumber[i] === '0') {
//                     inWords[j] = '';
//                 } else if (actnumber[i - 1] !== '0' && actnumber[i - 2] !== '0') {
//                     inWords[j] = iWords[actnumber[i]] + ' Hundred and';
//                 } else {
//                     inWords[j] = iWords[actnumber[i]] + ' Hundred';
//                 }
//                 break;
//             case 3:
//                 if (actnumber[i] === '0' || actnumber[i + 1] === '1') {
//                     inWords[j] = '';
//                 } else {
//                     inWords[j] = iWords[actnumber[i]];
//                 }
//                 if (actnumber[i + 1] !== '0' || actnumber[i] > '0') {
//                     inWords[j] = inWords[j] + ' Thousand';
//                 }
//                 break;
//             case 4:
//                 tensComplication();
//                 break;
//             case 5:
//                 if (actnumber[i] === '0' || actnumber[i + 1] === '1') {
//                     inWords[j] = '';
//                 } else {
//                     inWords[j] = iWords[actnumber[i]];
//                 }
//                 if (actnumber[i + 1] !== '0' || actnumber[i] > '0') {
//                     inWords[j] = inWords[j] + ' Lakh';
//                 }
//                 break;
//             case 6:
//                 tensComplication();
//                 break;
//             case 7:
//                 if (actnumber[i] === '0' || actnumber[i + 1] === '1') {
//                     inWords[j] = '';
//                 } else {
//                     inWords[j] = iWords[actnumber[i]];
//                 }
//                 inWords[j] = inWords[j] + ' Crore';
//                 break;
//             case 8:
//                 tensComplication();
//                 break;
//             default:
//                 break;
//         }
//         j++;
//     }
 
 
//     inWords.reverse();
//     for (i = 0; i < inWords.length; i++) {
//         finalWord += inWords[i];
//     }
//     document.getElementById('container').innerHTML = obStr + '  ' + finalWord;
// }
</script>
<div class="container">
<section>       
    <div id="container_demo" >

        <div id="wrapper">
            <div id="login" class="animate form">
            <h1>List Of Banks</h1>
             <center>
             <font color="green"><%=flash[:success]%></font><font color="red"><%=flash[:danger]%></font><br>
				<br/><br />

				<table>
					 <tr>
					  <th>Bank Name</th>
					  <th>Bank Address</th>
					  <th>Account Type</th>
					  <th>Account Number</th>
					  <th>Bban</th>
					  <%if session[:bank_role] == 1 %>
					  <th>Delete</th>
					  <th>Edit</th>
					  <%end%>
					  <th>Debit</th>
					  <!-- <th>Delete Multiple</th> -->
					 </tr>
					  <% @banks.each do |bank| %>
					<tr>
					  <td><%= bank.bank_name %></td>
					  <td><%= bank.bank_address %></td>
					  <td><%=AccountType.find_by_africell_bank_id(bank.id).account_type %></td>
					  <td><%=AccountNumber.find_by_africell_bank_id(bank.id).account_number%></td>
					  <td><%=BBan.find_by_africell_bank_id(bank.id).b_ban_number%></td>
					  <%if session[:bank_role] == 1 %>
					  <td><%= link_to image_tag("delete.gif", alt: "delete"), {:controller => 'banks', :action => 'destroy_data', :id => bank.id }, :method => :post, data: { confirm: "Are you sure You want to delete?" } %></td>
        			  <td> <%= link_to image_tag("pencil.png", alt: "edit"), {:controller => 'banks', :action => 'edit_bank', :id => bank.id }, :method => :get%></td>
        			  <%end%>
        			  <td><%= link_to "Debit",{:controller => 'banks', :action => 'bank', :id => bank.id }, :remote => true %></td>
        			  <tr>
					  <td colspan = "5"> <div id="generate"></div></td>
					  </tr>
					  <%end%>

				</table>
			</center>
			<br><br>
			<p class="change_link">
            <font color="#7E17E4"><b>Africell Gambia BSU Department.</b> </font><font color="#556E70" size="2">All rights reserved. Â© Copyright 2015</font> <br>
              <font color="#556E70" size="2">Designed & Developed by <b>Mam M Cham</b></font>&#8195;&#8195;&#8195;&#8195;&#8195;&#8195;&#8195;&#8195;&#8195;&#8195;&#8195;&#8195;&#8195;&#8195;&#8195;
            </p>
            </div>
        </div>
    </div>  
</section>
</div>
